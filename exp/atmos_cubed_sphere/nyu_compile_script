#!/bin/csh -f

#Minimal compile script for atmospheric dynamical cores
set echo 
#--------------------------------------------------------------------------------------------------------
# define variables
set platform  = nyu                                     # A unique identifier for your platform
set npes      = 24                                       # number of processors
set template  = $cwd/../../bin/mkmf.template.$platform   # path to template for your platform
set mkmf      = $cwd/../../bin/mkmf                      # path to executable mkmf
set sourcedir = $cwd/../../src                           # path to directory containing model source code
set mppnccombine = $cwd/../../bin/mppnccombine.$platform # path to executable mppnccombine
setenv PPDIR  $cwd/../../postprocessing     # path to directory containing postprocessing source code and grid data for fregrid_parallel
#--------------------------------------------------------------------------------------------------------
set execdir = $cwd/exec.$platform       # where code is compiled and executable is created
#set workdir = $TMP/pubrel               # where model is run and model output is produced
#source /opt/modules/default/init/tcsh
#module use -a /home/fms/local/modulefiles/ia64
#module purge
#module load ifort.9.1.041
#module load icc.9.1.045
#module load idb.9.1.045
#module load scsl-1.5.1.0
#module load mpt-1.18
#module load fms.local.netcdf4.riga
#module list

set pathnames = $cwd/path_names           # path to file containing list of source paths
set namelist  = $cwd/namelists            # path to namelist file
set diagtable = $cwd/diag_table           # path to diagnositics table
set fieldtable = $cwd/field_table         # path to field table (specifies tracers)
#--------------------------------------------------------------------------------------------------------
# compile mppnccombine.c, will be used only if $npes > 1
if ( ! -f $mppnccombine ) then
#  gcc -O -o $mppnccombine -I/usr/local/netcdf-4.0.1/include -L/usr/local/lib $PPDIR/mppnccombine.c -lnetcdf
  icc -O -o $mppnccombine -I/share/apps/netcdf/3.6.3/intel/include -L/share/apps/netcdf/3.6.3/intel/lib $cwd/../../postprocessing/mppnccombine.c -lnetcdf
endif
#--------------------------------------------------------------------------------------------------------
# setup directory structure
if ( ! -d $execdir ) mkdir $execdir
#if ( -e $workdir ) then
#  echo "ERROR: Existing workdir may contaminate run.  Move or remove $workdir and try again."
#  exit 1
#endif
#mkdir $workdir $workdir/INPUT $workdir/RESTART
#--------------------------------------------------------------------------------------------------------
# compile the model code and create executable
cd $execdir
$mkmf -p fms.x -t $template -c "-Duse_libMPI -Duse_netCDF -DSPMD" -a $sourcedir $pathnames $sourcedir/shared/mpp/include $sourcedir/shared/include
make -f Makefile
if ( $status != 0 ) then
  echo "ERROR: make failed"
  exit 1
endif
#cd $workdir
#--------------------------------------------------------------------------------------------------------
# set run length and time step, get input data and executable
#cat > input.nml <<EOF
# &main_nml
#     days   = 8,
#     dt_atmos = 1800 /
#EOF
#cat $namelist >> input.nml
#cp $diagtable diag_table
#cp $fieldtable field_table
#cp $execdir/fms.x fms.x
#--------------------------------------------------------------------------------------------------------
# run the model with mpirun
#mpirun -np $npes fms.x
#--------------------------------------------------------------------------------------------------------
# combine netcdf files
#if ( $npes > 1 ) then
#  foreach ncfile (`/bin/ls *.nc.0000`)
#    $mppnccombine $ncfile:r
#    if ($status == 0) rm -f $ncfile:r.????
#  end
#endif
#--------------------------------------------------------------------------------------------------------
#setenv NC_BLKSZ 64K
#setenv NETCDFPATH /usr/local/netcdf-4.0.1
#gmake -j 6 -f $PPDIR/Make_fregrid_parallel
#if ( $status != 0 ) exit
#--------------------------------------------------------------------------------------------------------
# Interpolate data to lat-lon grid
#set diagFiles = (*.tile1.nc)
#set latlonfiles = ()
#cp $PPDIR/horizontal_grid.tile?.nc .
#cp $PPDIR/C48_mosaic.nc .
#foreach File ($diagFiles)
#  set variables = (`ncdump -h $File | grep 'grid_yt, grid_xt' | awk '{print $2}' | cut -d\( -f1`)
#  set variables = `echo $variables |sed 's/ /,/g'`
#  set basename = $File:r:r
#  mpirun -np 2 fregrid_parallel --input_mosaic C48_mosaic.nc --input_file $basename --interp_method conserve_order2 \
#                                 --remap_file fregrid_remap_file --nlon 192 --nlat 92 --scalar_field $variables
#  set latlonfiles = ($latlonfiles $basename.nc)
#end
#echo 'Fields interpolated to lat-lon grid exist in these files:'
#foreach File ($latlonfiles)
#  ls -l $cwd/$File
#end
#--------------------------------------------------------------------------------------------------------
